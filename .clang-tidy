---
Checks: '-*,boost-*,bugprone-argument-comment,bugprone-assert-side-effect,bugprone-assignment-in-if-condition,bugprone-bad-signal-to-kill-thread,bugprone-bool-pointer-implicit-conversion,bugprone-branch-clone,bugprone-copy-constructor-init,bugprone-dangling-handle,bugprone-dynamic-static-initializers,bugprone-easily-swappable-parameters,bugprone-empty-catch,bugprone-fold-init-type,bugprone-forward-declaration-namespace,bugprone-forwarding-reference-overload,bugprone-implicit-widening-of-multiplication-result,bugprone-inaccurate-erase,bugprone-incorrect-roundings,bugprone-infinite-loop,bugprone-integer-division,bugprone-lambda-function-name,bugprone-macro-*,bugprone-misplaced-*,bugprone-move-forwarding-reference,bugprone-multiple-*,bugprone-narrowing-conversions,bugprone-no-escape,bugprone-non-zero-enum-to-bool-conversion,bugprone-not-null-terminated-result,bugprone-posix-return,bugprone-redundant-branch-condition,bugprone-reserved-identifier,bugprone-shared-ptr-array-mismatch,bugprone-signal-handler,bugprone-signed-char-misuse,bugprone-sizeof-*,bugprone-spuriously-wake-up-functions,bugprone-standalone-empty,bugprone-string-*,bugprone-stringview-nullptr,bugprone-suspicious-*,bugprone-swapped-arguments,bugprone-switch-missing-default-case,bugprone-terminating-continue,bugprone-throw-keyword-missing,bugprone-too-small-loop-variable,bugprone-unchecked-optional-access,bugprone-undefined-memory-manipulation,bugprone-undelegated-constructor,bugprone-unhandled-*,bugprone-unique-ptr-array-mismatch,bugprone-unsafe-functions,bugprone-unused-*,bugprone-use-after-move,bugprone-virtual-near-miss,clang-*,cppcoreguidelines-avoid-c-arrays,cppcoreguidelines-avoid-capturing-lambda-coroutines,cppcoreguidelines-avoid-const-or-ref-data-members,cppcoreguidelines-avoid-goto,cppcoreguidelines-avoid-magic-numbers,cppcoreguidelines-avoid-non-const-global-variables,cppcoreguidelines-avoid-reference-coroutine-parameters,cppcoreguidelines-c-copy-assignment-signature,cppcoreguidelines-explicit-virtual-functions,cppcoreguidelines-init-variables,cppcoreguidelines-interfaces-global-init,cppcoreguidelines-misleading-capture-default-by-value,cppcoreguidelines-missing-std-forward,cppcoreguidelines-narrowing-conversions,cppcoreguidelines-no-malloc,cppcoreguidelines-noexcept-*,cppcoreguidelines-owning-memory,cppcoreguidelines-prefer-member-initializer,cppcoreguidelines-pro-bounds-array-to-pointer-decay,cppcoreguidelines-pro-bounds-constant-array-index,cppcoreguidelines-pro-type-const-cast,cppcoreguidelines-pro-type-cstyle-cast,cppcoreguidelines-pro-type-member-init,cppcoreguidelines-pro-type-reinterpret-cast,cppcoreguidelines-pro-type-union-access,cppcoreguidelines-pro-type-vararg,cppcoreguidelines-rvalue-reference-param-not-moved,cppcoreguidelines-slicing,cppcoreguidelines-use-default-member-init,cppcoreguidelines-virtual-class-destructor,google-build-explicit-make-pair,google-build-namespaces,google-default-arguments,google-readability-casting,google-runtime-*,google-upgrade-googletest-case,misc-confusable-identifiers,misc-const-correctness,misc-definitions-in-headers,misc-header-include-cycle,misc-misleading-identifier,misc-misplaced-const,misc-new-delete-overloads,misc-no-recursion,misc-redundant-expression,misc-static-assert,misc-throw-by-value-catch-by-reference,misc-unconventional-assign-operator,misc-uniqueptr-reset-release,misc-unused-parameters,misc-unused-using-decls,misc-use-anonymous-namespace,modernize-avoid-*,modernize-concat-nested-namespaces,modernize-deprecated-*,modernize-loop-convert,modernize-macro-to-enum,modernize-make-*,modernize-pass-by-value,modernize-raw-string-literal,modernize-redundant-void-arg,modernize-replace-*,modernize-return-braced-init-list,modernize-shrink-to-fit,modernize-type-traits,modernize-unary-static-assert,modernize-use-auto,modernize-use-bool-literals,modernize-use-default-member-init,modernize-use-emplace,modernize-use-equals-*,modernize-use-nullptr,modernize-use-override,modernize-use-std-print,modernize-use-transparent-functors,modernize-use-uncaught-exceptions,modernize-use-using,performance-avoid-endl,performance-faster-string-find,performance-for-range-copy,performance-implicit-conversion-in-loop,performance-inefficient-algorithm,performance-inefficient-vector-operation,performance-move-*,performance-no-*,performance-noexcept-*,performance-trivially-destructible,performance-type-promotion-in-math-fn,performance-unnecessary-*,portability-simd-intrinsics,portability-std-allocator-const,readability-avoid-const-params-in-decls,readability-avoid-nested-conditional-operator,readability-avoid-unconditional-preprocessor-if,readability-braces-around-statements,readability-const-return-type,readability-container-*,readability-convert-member-functions-to-static,readability-delete-null-pointer,readability-duplicate-include,readability-else-after-return,readability-identifier-naming'
WarningsAsErrors: '*'
CheckOptions:
    - key: readability-simplify-boolean-expr.ChainedConditionalReturn
      value: true
    - key: readability-simplify-boolean-expr.ChainedConditionalAssignment
      value: true
    - key: google-runtime-int.UnsignedTypePrefix
      value: std::uint
    - key: google-runtime-int.SignedTypePrefix
      value: std::int
    - key: google-runtime-int.TypeSuffix
      value: _t
    - key: cppcoreguidelines-init-variables.MathHeader
      value: <cmath>
    - key: modernize-loop-convert.MinConfidence
      value: risky
    - key: bugprone-misplaced-widening-cast.CheckImplicitCasts
      value: true
    - key: cppcoreguidelines-macro-usage.AllowedRegexp
      value: (?i)^fubuki_*
    - key: cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
      value: true
    - key: bugprone-assert-side-effect.AssertMacros
      value: fubuki_assert
    - key: bugprone-sizeof-expression.WarnOnSizeOfIntegerExpression
      value: true
    - key: bugprone-suspicious-enum-usage.StrictMode
      value: 1
    - key: readability-identifier-naming.ClassCase
      value: lower_case
    - key: readability-identifier-naming.ClassMemberCase
      value: lower_case
    - key: readability-identifier-naming.ClassMethodCase
      value: lower_case
    - key: readability-identifier-naming.ConstantMemberCase
      value: lower_case
    - key: readability-identifier-naming.EnumCase
      value: lower_case
    - key: readability-identifier-naming.EnumConstantCase
      value: lower_case
    - key: readability-identifier-naming.FunctionCase
      value: lower_case
    - key: readability-identifier-naming.MemberCase
      value: lower_case
    - key: readability-identifier-naming.MethodCase
      value: lower_case
    - key: readability-identifier-naming.NamespaceCase
      value: lower_case
    - key: readability-identifier-naming.ParameterCase
      value: lower_case
    - key: readability-identifier-naming.PrivateMemberCase
      value: lower_case
    - key: readability-identifier-naming.PrivateMemberPrefix
      value: m_
    - key: readability-identifier-naming.StaticConstantCase
      value: lower_case
    - key: readability-identifier-naming.TypeAliasCase
      value: lower_case
    - key: readability-identifier-naming.VariableCase
      value: lower_case
...
